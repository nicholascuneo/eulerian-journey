"""
Project Euler Problem 2
=======================

Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not
exceed four million.
"""

def fibonacci_up_to(limit):
    """
    Generate list of fibonacci numbers up to a given limit.
    """
    a, b = 0, 1
    fib_sequence = []

    while a <= limit:
        fib_sequence.append(a)
        a, b = b, a + b
    
    return fib_sequence

def sum_even_fibonacci(limit):
    """
    Calculate sum of even fibonacci numbers up to a given limit.
    """
    sum = 0
    sequence = fibonacci_up_to(limit)

    for i in sequence:
        # Add even fibonacci numbers to the sum
        if i % 2 == 0:
            sum += i
    
    return sum

if __name__ == "__main__":
    print(sum_even_fibonacci(4000000))